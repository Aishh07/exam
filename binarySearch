#include <stdio.h>

// Function to perform Binary Search
int binarySearch(int arr[], int n, int key) {
    int left = 0;
    int right = n - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2; // Calculate mid index

        // Check if the key is present at mid
        if (arr[mid] == key) {
            return mid; // Return the index of the found element
        }
        // If the key is greater, ignore the left half
        else if (arr[mid] < key) {
            left = mid + 1;
        }
        // If the key is smaller, ignore the right half
        else {
            right = mid - 1;
        }
    }
    return -1; // Return -1 if the element is not found
}

// Function to print the array
void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

// Main function
int main() {
    int arr[] = {2, 3, 5, 12, 34, 54}; // Sorted array
    int n = sizeof(arr) / sizeof(arr[0]);
    int key = 34; // Element to search for

    printf("Array: \n");
    printArray(arr, n);

    int result = binarySearch(arr, n, key);
    if (result != -1) {
        printf("Element %d found at index %d.\n", key, result);
    } else {
        printf("Element %d not found in the array.\n", key);
    }

    return 0;
}
